import { useDispatch, useSelector } from "react-redux";
import ModalWrapper from "../../assets/style/modal.style";
import InputWrapper from "../../components/form/inputWrapper.form";
import { Input, InputNumber, Select, DatePicker } from "antd";
import { useEffect } from "react";
import malwareSlice from "../../toolkits/malware/slice";
import TextArea from "antd/es/input/TextArea";

export default function ModalItem() {
  const dispatch = useDispatch();

  const { modalActive, selectedMalware, malwares, malwaresRaw } = useSelector(
    (state) => state.malwares
  );

  //use for change input component
  const onChangeInputRecord = (key, event) => {
    let record = Object.assign({}, selectedMalware);
    if (key) {
      record[key] = event.target.value;
    }
    dispatch(malwareSlice.actions.updateSelectedMalwareInput(record));
  };

  //use for change selected component
  const onChangeSelectedRecord = (key, event) => {
    let record = Object.assign({}, selectedMalware);
    if (key) {
      record[key] = event;
    }
    dispatch(malwareSlice.actions.updateSelectedMalwareInput(record));
  };

  const onProcessingRecord = (actionName, _item) => {
    //validate data here

    //call processing data
    dispatch(
      malwareSlice.actions.processingMalware({
        item: _item,
        actionName: actionName,
      })
    );
  };

  const handleModal = (_item) => {
    dispatch(malwareSlice.actions.toggleModal(_item));
  };

  // side effect (call any state that you need for modal)
  useEffect(() => {
    if (modalActive === true) {
      dispatch(malwareSlice.actions.getRaw());
    }
  }, [modalActive]);

  return (
    <ModalWrapper
      okText="Chấp nhận"
      cancelText="Từ chối"
      // width={500}
      onCancel={() => handleModal(null)}
      open={modalActive}
      maskClosable={false}
      title={selectedMalware?._id ? "Cập nhật phòng ban" : "Thêm mới phòng ban"}
      onOk={
        selectedMalware._id
          ? () => onProcessingRecord("UPDATE_ITEM", selectedMalware)
          : () => onProcessingRecord("ADD_ITEM", selectedMalware)
      }
    >
      <InputWrapper title="Tên mã độc">
        <Input
          placeholder="Nhập tên mã độc"
          value={selectedMalware?.name}
          onChange={(e) => onChangeInputRecord("name", e)}
        />
      </InputWrapper>

      <InputWrapper title="Dấu hiệu">
        <TextArea
          placeholder="Nhập dấu hiệu"
          value={selectedMalware?.sign}
          onChange={(e) => onChangeInputRecord("sign", e)}
          rows={4}
        />
      </InputWrapper>
    </ModalWrapper>
  );
}
